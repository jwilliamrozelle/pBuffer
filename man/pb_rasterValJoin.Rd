% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb_rasterValJoin.R
\name{pb_rasterValJoin}
\alias{pb_rasterValJoin}
\title{pb_rasterValJoin}
\usage{
pb_rasterValJoin(
  displaced.sf,
  inputRaster,
  bufferlengths = 5000,
  adminBound = NULL,
  adminID = "ID_2",
  n.cores = 1
)
}
\arguments{
\item{displaced.sf}{Displaced coordinates in an sf object type.}

\item{inputRaster}{Object of class raster that the function will estimate a probable value from}

\item{bufferlengths}{The radius of the probability buffer to use}

\item{adminBound}{(Optional) the administrative boundary that circumscribes the displacement}

\item{adminID}{The unique ID for the adminBound features, if they are used. Defaults to "ID_2".}

\item{n.cores}{This allows for parallelization using the futures package. This can be slightly unstable, but normally functions well and dramatically speeds compute time when it does. n.cores specifies the number of cores to use. The default is 1, and does not parallelize.}
}
\value{
Returns a list of two dataframes: estimate.df and commVals.df. estimate.df contains the best estimate of the raster value, while commVals.df contains all possible raster cells and their respective weights.
}
\description{
Estimates th
}
\details{
This function can run rather slowly, since it re-calculates the probability raster for every community location. This is probably overkill, and unless the raster resolution is very low the pb_quickRasterValJoin would be nearly indestinguishable.
}
\examples{

# coming soon!

}
\author{
J.W. Rozelle
}
